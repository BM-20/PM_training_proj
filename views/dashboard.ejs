<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Stock Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Boxicons -->
  <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">

  <link rel="stylesheet" href="/css/dashboard.css">
</head>
<body>

  <!-- Header -->
  <header>
    <h1 id="title">üìä Stock Dashboard</h1>
    <button class="btn btn-light btn-sm" onclick="switchLanguage()">üåê <span id="langBtn">ES</span></button>
  </header>

  <div class="container py-3">
   
    <!-- TradingView Ticker Tape -->
    <div class="tradingview-widget-container">
      <div class="tradingview-widget-container__widget"></div>
      <div class="tradingview-widget-copyright">
        <a href="https://www.tradingview.com/" rel="noopener nofollow" target="_blank">
          <span class="blue-text">Ticker tape by TradingView</span>
        </a>
      </div>
      <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js" async>
      {
        "symbols": [
          { "proName": "FOREXCOM:SPXUSD", "title": "S&P 500 Index" },
          { "proName": "FOREXCOM:NSXUSD", "title": "US 100 Cash CFD" },
          { "proName": "FX_IDC:EURUSD", "title": "EUR to USD" },
          { "proName": "BITSTAMP:BTCUSD", "title": "Bitcoin" },
          { "proName": "BITSTAMP:ETHUSD", "title": "Ethereum" }
        ],
        "colorTheme": "dark",
        "locale": "en",
        "isTransparent": false,
        "showSymbolLogo": true,
        "displayMode": "adaptive"
      }
      </script>
    </div>

    <!-- Overview Section -->
     

<div class="container-fluid py-3 mt-5">
  <div class="row">
    <!-- Sidebar: Stock Overview -->
    <div class="col-md-3">
      <h2 id="overviewTitle">Overview</h2>
      <div class="stock-list" id="stockList">
        <% if (stocks && stocks.length > 0) { %>
          <% stocks.forEach(stock => { %>
            <div class="stock-item">
              <span class="ticker"><%= stock.ticker %></span>
              <span class="change <%= stock.percentageChange > 0 ? 'gain' : 'loss' %>">
                <%= stock.percentageChange > 0 ? '+' : '' %><%= stock.percentageChange.toFixed(2) %>%
              </span>
            </div>
          <% }) %>
        <% } else { %>
          <p>No stocks found in your portfolio.</p>
        <% } %>
      </div>
    </div>

    <!-- Main Content: Carousel Charts -->
    <div class="col-md-9">
      <div id="chartCarousel" class="carousel slide mt-4" data-bs-ride="carousel">
        <div class="carousel-inner">
          <!-- Pie Chart -->
          <div class="carousel-item active">
            <div class="card bg-dark text-white p-3">
              <h4>Stock Allocation</h4>

              <div class="chart-container">
                <canvas id="pieChart"></canvas>
              </div>
              
            </div>
          </div>

          <!-- Second Chart: Portfolio Value Split -->
          <div class="carousel-item">
            <div class="card bg-dark text-white mb-3 p-3">
              <h4>Portfolio Value Split</h4>

              <div class="chart-container">
                 <canvas id="valuePieChart"></canvas>
              </div>
             
            </div>
          </div>

          <!-- Line Chart -->
          <div class="carousel-item">
            <div class="card bg-dark text-white p-3">
              <h4>Portfolio Growth</h4>

              
              <canvas id="lineChart"></canvas>
              
              
            </div>
          </div>
        </div>

        <!-- Carousel Controls -->
        <button class="carousel-control-prev" type="button" data-bs-target="#chartCarousel" data-bs-slide="prev">
          <span class="carousel-control-prev-icon"></span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#chartCarousel" data-bs-slide="next">
          <span class="carousel-control-next-icon"></span>
        </button>
      </div>
    </div>
  </div>
</div>



    <!-- AI Chat Section -->
    <section id="chatSection" class="d-none">
      <h2 id="chatTitle">AI Assistant</h2>
      <div class="chat-box">
        <div class="chat-messages" id="chatMessages">
          <div><b>AI:</b> Hello! Ask me about stock insights üìà</div>
        </div>
        <div class="chat-input">
          <input type="text" class="form-control" id="userInput" placeholder="Type your question...">
          <button class="btn btn-success" onclick="sendMessage()">Send</button>
        </div>
      </div>
    </section>

    <!-- Add Stock Modal -->
    <div class="modal fade" id="addStockModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-3">
          <h4 class="mb-3">Add New Stock</h4>
          <input type="text" id="newStockTicker" placeholder="Ticker Symbol" class="form-control mb-2">
          <input type="number" id="newStockAmount" placeholder="Amount" class="form-control mb-3">
          <div class="d-flex justify-content-between">
            <button class="btn btn-success" onclick="submitNewStock()">Submit</button>
            <button class="btn btn-secondary" onclick="closeAddStockModal()">Cancel</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bottom Navigation -->
  <nav class="navbar fixed-bottom bg-dark text-white">
    <div class="container-fluid d-flex justify-content-around">
      <button class="btn text-white active" id="navOverview" onclick="showSection('overview')">
        <i class='bx bx-home'></i><div>Overview</div>
      </button>
      <button class="btn text-white btn-circle" id="navAddStock" onclick="openAddStockModalNav()">
        <i class='bx bx-plus'></i>
      </button>
      <button class="btn text-white" id="navChat" onclick="showSection('chat')">
        <i class='bx bx-bot'></i><div>AI</div>
      </button>
    </div>
  </nav>

  <!-- Bootstrap JS bundle (with Popper) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/dashboard.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Convert backend data into JS arrays
    const stocks = <%- JSON.stringify(stocks) %>;
    const portfolioHistory = <%- JSON.stringify(portfolioHistory) %>;
    const values = stocks.map(stock => stock.amount * stock.currStockPrice);

    // Pie chart for stock allocation (by amount of shares)
    const pieCtx = document.getElementById('pieChart').getContext('2d');
    new Chart(pieCtx, {
      type: 'pie',
      data: {
        labels: stocks.map(s => s.ticker),
        datasets: [{
          label: 'Share Allocation',
          data: stocks.map(s => s.amount),
          backgroundColor: ['#0d6efd','#4CAF50','#FF4136','#FFC107','#6610f2','#20c997']
        }]
      },
      options: { plugins: { legend: { labels: { color: '#fff' } } } }
    });

    // Second Pie Chart (value split)
    const valuePieCtx = document.getElementById('valuePieChart').getContext('2d');
    new Chart(valuePieCtx, {
      type: 'pie',
      data: {
        labels: stocks.map(s => s.ticker),
        datasets: [{
          label: 'Value Split',
          data: values,
          backgroundColor: ['#ff6384','#36a2eb','#ffce56','#4bc0c0','#9966ff','#ff9f40']
        }]
      },
      options: { plugins: { legend: { labels: { color: '#fff' } } } }
    });

    // Line chart for portfolio growth
    const lineCtx = document.getElementById('lineChart').getContext('2d');
    new Chart(lineCtx, {
      type: 'line',
      data: {
        labels: portfolioHistory.map(p => p.date),
        datasets: [{
          label: 'Portfolio Value',
          data: portfolioHistory.map(p => p.value),
          borderColor: '#0d6efd',
          backgroundColor: 'rgba(13,110,253,0.2)',
          fill: true,
          tension: 0.3
        }]
      },
      options: {
        plugins: { legend: { labels: { color: '#fff' } } },
        scales: {
          x: { ticks: { color: '#fff' }, grid: { color: '#333' } },
          y: { ticks: { color: '#fff' }, grid: { color: '#333' } }
        }
      }
    });
  </script>


</body>
</html>
